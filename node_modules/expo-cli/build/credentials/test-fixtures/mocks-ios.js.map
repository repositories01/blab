{"version":3,"sources":["../../../src/credentials/test-fixtures/mocks-ios.ts"],"names":["today","Date","tomorrow","getTime","testSlug","testExperienceName","testBundleIdentifier","testAppLookupParams","accountName","projectName","bundleIdentifier","testAppleTeam","id","testProvisioningProfile","provisioningProfileId","provisioningProfile","teamId","testProvisioningProfiles","testProvisioningProfileFromApple","name","status","expires","distributionMethod","certificates","testProvisioningProfilesFromApple","testDistCert","certP12","certPassword","distCertSerialNumber","testIosDistCredential","type","testIosDistCredentials","testDistCertFromApple","created","ownerType","ownerName","ownerId","serialNumber","testDistCertsFromApple","testPushKey","apnsKeyP8","apnsKeyId","testIosPushCredential","testIosPushCredentials","testPushKeyFromApple","testPushKeysFromApple","testLegacyPushCert","pushId","pushP12","pushPassword","testAppCredential","experienceName","distCredentialsId","pushCredentialsId","credentials","testAllCredentialsForApp","pushCredentials","distCredentials","testAppCredentials","testAllCredentials","userCredentials","appCredentials","jester","kind","username","nickname","userId","picture","userMetadata","onboarded","currentConnection","sessionSecret","jester2","getApiV2MockCredentials","overridenMock","defaultCredentialsApiV2Mock","getAsync","jest","fn","url","getApiV2Mock","defaultMock","postAsync","putAsync","deleteAsync","uploadFormDataAsync","_requestAsync","getApiClientMock","getAllCredentialsApi","Error","getAllCredentialsForAppApi","getUserCredentialsByIdApi","createDistCertApi","updateDistCertApi","deleteDistCertApi","useDistCertApi","createPushKeyApi","updatePushKeyApi","deletePushKeyApi","usePushKeyApi","deletePushCertApi","updateProvisioningProfileApi","deleteProvisioningProfileApi","testAppJson","version","slug","sdkVersion","ios","testAppJsonWithDifferentOwner","owner","getCtxMock","getDistCert","createDistCert","useDistCert","getPushKey","createPushKey","usePushKey","updateProvisioningProfile","getAppCredentials","getProvisioningProfile","getAllCredentials","appleCtx","appleId","appleIdPassword","team","fastlaneSession","ensureAppleCtx","user","hasAppleCtx","hasProjectContext","manifest"],"mappings":"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","sourcesContent":["import { User } from '@expo/xdl';\nimport merge from 'lodash/merge';\n\nimport {\n  DistCert,\n  DistCertInfo,\n  ProvisioningProfile,\n  ProvisioningProfileInfo,\n  PushKey,\n  PushKeyInfo,\n  Team,\n} from '../../appleApi';\nimport { IosDistCredentials, IosPushCredentials } from '../credentials';\n\n/*\nMock Credential objects for Jester\n*/\nconst today = new Date();\nconst tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000);\nexport const testSlug = 'testApp';\nexport const testExperienceName = `@jester/${testSlug}`;\nexport const testBundleIdentifier = 'test.com.app';\nexport const testAppLookupParams = {\n  accountName: 'jester',\n  projectName: testSlug,\n  bundleIdentifier: testBundleIdentifier,\n};\nexport const testAppleTeam: Team = {\n  id: 'test-team-id',\n};\nexport const testProvisioningProfile: ProvisioningProfile = {\n  provisioningProfileId: 'test-id',\n  provisioningProfile: 'test',\n  teamId: 'id',\n};\nexport const testProvisioningProfiles = [testProvisioningProfile];\nexport const testProvisioningProfileFromApple: ProvisioningProfileInfo = {\n  name: 'test-name',\n  status: 'Active',\n  expires: tomorrow.getTime(),\n  distributionMethod: 'test',\n  certificates: [],\n  provisioningProfileId: testProvisioningProfile.provisioningProfileId,\n  provisioningProfile: testProvisioningProfile.provisioningProfile,\n  teamId: 'id',\n};\nexport const testProvisioningProfilesFromApple = [testProvisioningProfileFromApple];\n\nexport const testDistCert: DistCert = {\n  certP12: 'test-p12',\n  certPassword: 'test-password',\n  distCertSerialNumber: 'test-serial',\n  teamId: 'test-team-id',\n};\nexport const testIosDistCredential: IosDistCredentials = {\n  id: 1,\n  type: 'dist-cert',\n  ...testDistCert,\n};\nexport const testIosDistCredentials = [testIosDistCredential];\nexport const testDistCertFromApple: DistCertInfo = {\n  id: 'test-id',\n  name: 'test-name',\n  status: 'Active',\n  created: today.getTime(),\n  expires: tomorrow.getTime(),\n  ownerType: 'test-owner-type',\n  ownerName: 'test-owner',\n  ownerId: 'test-id',\n  serialNumber: testIosDistCredential.distCertSerialNumber as string,\n};\nexport const testDistCertsFromApple = [testDistCertFromApple];\n\nexport const testPushKey: PushKey = {\n  apnsKeyP8: 'test-p8',\n  apnsKeyId: 'test-key-id',\n  teamId: 'test-team-id',\n};\nexport const testIosPushCredential: IosPushCredentials = {\n  id: 2,\n  type: 'push-key',\n  ...testPushKey,\n};\nexport const testIosPushCredentials = [testIosPushCredential];\nexport const testPushKeyFromApple: PushKeyInfo = {\n  id: testIosPushCredential.apnsKeyId,\n  name: 'test-name',\n};\nexport const testPushKeysFromApple = [testPushKeyFromApple];\nexport const testLegacyPushCert = {\n  pushId: 'test-push-id',\n  pushP12: 'test-push-p12',\n  pushPassword: 'test-push-password',\n};\nexport const testAppCredential = {\n  experienceName: testExperienceName,\n  bundleIdentifier: testBundleIdentifier,\n  distCredentialsId: testIosDistCredential.id,\n  pushCredentialsId: testIosPushCredential.id,\n  credentials: {\n    ...testProvisioningProfile,\n  },\n};\nexport const testAllCredentialsForApp = {\n  ...testAppCredential,\n  pushCredentials: testPushKey,\n  distCredentials: testDistCert,\n};\nexport const testAppCredentials = [testAppCredential];\nexport const testAllCredentials = {\n  userCredentials: [...testIosDistCredentials, ...testIosPushCredentials],\n  appCredentials: testAppCredentials,\n};\n\nexport const jester: User = {\n  kind: 'user',\n  username: 'jester',\n  nickname: 'jester',\n  userId: 'jester-id',\n  picture: 'jester-pic',\n  userMetadata: { onboarded: true },\n  currentConnection: 'Username-Password-Authentication',\n  sessionSecret: 'jester-secret',\n};\n\nexport const jester2: User = {\n  kind: 'user',\n  username: 'jester2',\n  nickname: 'jester2',\n  userId: 'jester2-id',\n  picture: 'jester2-pic',\n  userMetadata: { onboarded: true },\n  currentConnection: 'Username-Password-Authentication',\n  sessionSecret: 'jester2-secret',\n};\n\nexport function getApiV2MockCredentials(overridenMock: { [key: string]: any } = {}) {\n  const defaultCredentialsApiV2Mock = {\n    getAsync: jest.fn(url => testAllCredentials),\n  };\n  return getApiV2Mock(merge(defaultCredentialsApiV2Mock, overridenMock));\n}\nexport function getApiV2Mock(overridenMock: { [key: string]: any } = {}) {\n  const defaultMock = {\n    sessionSecret: 'test-session',\n    getAsync: jest.fn(),\n    postAsync: jest.fn(),\n    putAsync: jest.fn(),\n    deleteAsync: jest.fn(),\n    uploadFormDataAsync: jest.fn(),\n    _requestAsync: jest.fn(),\n  };\n  return merge(defaultMock, overridenMock);\n}\n\nexport function getApiClientMock(overridenMock: { [key: string]: any } = {}) {\n  // by default all method throw exceptions to make sure that we only what is expected\n  const defaultMock = {\n    getAllCredentialsApi: jest.fn(() => {\n      throw new Error('unexpected call');\n    }),\n    getAllCredentialsForAppApi: jest.fn(() => {\n      throw new Error('unexpected call');\n    }),\n    getUserCredentialsByIdApi: jest.fn(() => {\n      throw new Error('unexpected call');\n    }),\n    createDistCertApi: jest.fn(() => {\n      throw new Error('unexpected call');\n    }),\n    updateDistCertApi: jest.fn(() => {\n      throw new Error('unexpected call');\n    }),\n    deleteDistCertApi: jest.fn(() => {\n      throw new Error('unexpected call');\n    }),\n    useDistCertApi: jest.fn(() => {\n      throw new Error('unexpected call');\n    }),\n    createPushKeyApi: jest.fn(() => {\n      throw new Error('unexpected call');\n    }),\n    updatePushKeyApi: jest.fn(() => {\n      throw new Error('unexpected call');\n    }),\n    deletePushKeyApi: jest.fn(() => {\n      throw new Error('unexpected call');\n    }),\n    usePushKeyApi: jest.fn(() => {\n      throw new Error('unexpected call');\n    }),\n    deletePushCertApi: jest.fn(() => {\n      throw new Error('unexpected call');\n    }),\n    updateProvisioningProfileApi: jest.fn(() => {\n      throw new Error('unexpected call');\n    }),\n    deleteProvisioningProfileApi: jest.fn(() => {\n      throw new Error('unexpected call');\n    }),\n  };\n  return merge(defaultMock, overridenMock);\n}\n\nexport const testAppJson = {\n  name: 'testing 123',\n  version: '0.1.0',\n  slug: testSlug,\n  sdkVersion: '33.0.0',\n  ios: { bundleIdentifier: testBundleIdentifier },\n};\nexport const testAppJsonWithDifferentOwner = {\n  ...testAppJson,\n  owner: jester2.username,\n};\n\nexport function getCtxMock(overridenMock: { [key: string]: any } = {}) {\n  const defaultMock = {\n    ios: {\n      getDistCert: jest.fn(() => testDistCert),\n      createDistCert: jest.fn(() => testIosDistCredential),\n      useDistCert: jest.fn(),\n      getPushKey: jest.fn(() => testPushKey),\n      createPushKey: jest.fn(() => testIosPushCredential),\n      usePushKey: jest.fn(),\n      updateProvisioningProfile: jest.fn(),\n      getAppCredentials: jest.fn(() => testAppCredentials),\n      getProvisioningProfile: jest.fn(() => testProvisioningProfile),\n      getAllCredentials: jest.fn(() => testAllCredentials),\n    },\n    appleCtx: {\n      appleId: 'test-id',\n      appleIdPassword: 'test-password',\n      team: { id: 'test-team-id' },\n      fastlaneSession: 'test-fastlane-session',\n    },\n    ensureAppleCtx: jest.fn(),\n    user: jest.fn(),\n    hasAppleCtx: jest.fn(() => true),\n    hasProjectContext: true,\n    manifest: testAppJson,\n  };\n  return merge(defaultMock, overridenMock);\n}\n"],"file":"mocks-ios.js"}