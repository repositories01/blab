{"version":3,"sources":["../../../../../src/commands/eas-build/build/builders/AndroidBuilder.ts"],"names":["AndroidBuilder","constructor","ctx","eas","builds","android","Error","buildProfile","ensureCredentialsAsync","credentialsPrepared","shouldLoadCredentials","provider","AndroidCredentialsProvider","projectDir","projectName","accountName","initAsync","credentialsSource","workflow","nonInteractive","credentials","getCredentialsAsync","configureProjectAsync","prepareJobAsync","archiveUrl","Workflow","Generic","prepareGenericJobAsync","Managed","prepareManagedJobAsync","prepareJobCommonAsync","secrets","keystore","dataBase64","keystorePassword","keyAlias","keyPassword","platform","Platform","Android","projectUrl","type","BuildType","gradleCommand","buildCommand","artifactPath","packageJson","example","manifest","withoutCredentials"],"mappings":"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","sourcesContent":["import { Android, BuildType, Job, Platform, sanitizeJob } from '@expo/build-tools';\n\nimport AndroidCredentialsProvider, {\n  AndroidCredentials,\n} from '../../../../credentials/provider/AndroidCredentialsProvider';\nimport {\n  AndroidBuildProfile,\n  AndroidGenericBuildProfile,\n  AndroidManagedBuildProfile,\n  Workflow,\n} from '../../../../easJson';\nimport { ensureCredentialsAsync } from '../credentials';\nimport { Builder, BuilderContext } from '../types';\n\ninterface CommonJobProperties {\n  platform: Platform.Android;\n  projectUrl: string;\n  secrets?: {\n    keystore: Android.Keystore;\n  };\n}\n\nclass AndroidBuilder implements Builder {\n  private credentials?: AndroidCredentials;\n  private buildProfile: AndroidBuildProfile;\n  private credentialsPrepared: boolean = false;\n\n  constructor(public readonly ctx: BuilderContext) {\n    if (!ctx.eas.builds.android) {\n      throw new Error(\"missing android configuration, shouldn't happen\");\n    }\n    this.buildProfile = ctx.eas.builds.android;\n  }\n\n  public async ensureCredentialsAsync(): Promise<void> {\n    this.credentialsPrepared = true;\n    if (!this.shouldLoadCredentials()) {\n      return;\n    }\n    const provider = new AndroidCredentialsProvider(this.ctx.projectDir, {\n      projectName: this.ctx.projectName,\n      accountName: this.ctx.accountName,\n    });\n    await provider.initAsync();\n    const credentialsSource = await ensureCredentialsAsync(\n      provider,\n      this.buildProfile.workflow,\n      this.buildProfile.credentialsSource,\n      this.ctx.nonInteractive\n    );\n    this.credentials = await provider.getCredentialsAsync(credentialsSource);\n  }\n\n  public async configureProjectAsync(): Promise<void> {\n    // TODO: implement me\n  }\n\n  public async prepareJobAsync(archiveUrl: string): Promise<Job> {\n    if (!this.credentialsPrepared) {\n      throw new Error('ensureCredentialsAsync should be called before prepareJobAsync');\n    }\n    if (this.buildProfile.workflow === Workflow.Generic) {\n      return sanitizeJob(await this.prepareGenericJobAsync(archiveUrl, this.buildProfile));\n    } else if (this.buildProfile.workflow === Workflow.Managed) {\n      return sanitizeJob(await this.prepareManagedJobAsync(archiveUrl, this.buildProfile));\n    } else {\n      throw new Error(\"Unknown workflow. Shouldn't happen\");\n    }\n  }\n\n  private async prepareJobCommonAsync(archiveUrl: string): Promise<Partial<CommonJobProperties>> {\n    const secrets = this.credentials\n      ? {\n          secrets: {\n            keystore: {\n              dataBase64: this.credentials.keystore.keystore,\n              keystorePassword: this.credentials.keystore.keystorePassword,\n              keyAlias: this.credentials.keystore.keyAlias,\n              keyPassword: this.credentials.keystore.keyPassword,\n            },\n          },\n        }\n      : {};\n\n    return {\n      platform: Platform.Android,\n      projectUrl: archiveUrl,\n      ...secrets,\n    };\n  }\n\n  private async prepareGenericJobAsync(\n    archiveUrl: string,\n    buildProfile: AndroidGenericBuildProfile\n  ): Promise<Partial<Android.GenericJob>> {\n    return {\n      ...(await this.prepareJobCommonAsync(archiveUrl)),\n      type: BuildType.Generic,\n      gradleCommand: buildProfile.buildCommand,\n      artifactPath: buildProfile.artifactPath,\n    };\n  }\n\n  private async prepareManagedJobAsync(\n    archiveUrl: string,\n    buildProfile: AndroidManagedBuildProfile\n  ): Promise<Partial<Android.ManagedJob>> {\n    return {\n      ...(await this.prepareJobCommonAsync(archiveUrl)),\n      type: BuildType.Managed,\n      packageJson: { example: 'packageJson' },\n      manifest: { example: 'manifest' },\n    };\n  }\n\n  private shouldLoadCredentials(): boolean {\n    return (\n      this.buildProfile.workflow === Workflow.Managed ||\n      (this.buildProfile.workflow === Workflow.Generic && !this.buildProfile.withoutCredentials)\n    );\n  }\n}\n\nexport default AndroidBuilder;\n"],"file":"AndroidBuilder.js"}