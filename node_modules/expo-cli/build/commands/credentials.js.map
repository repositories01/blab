{"version":3,"sources":["../../src/commands/credentials.ts"],"names":["program","command","description","option","asyncAction","options","projectDir","process","cwd","context","Context","init","nonInteractive","parent","mainpage","platform","SelectAndroidExperience","SelectIosExperience","SelectPlatform"],"mappings":";;;;;;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAae,kBAAUA,OAAV,EAAoC;AACjDA,EAAAA,OAAO,CACJC,OADH,CACW,qBADX,EAEGC,WAFH,CAEe,yBAFf,EAGGC,MAHH,CAGU,0BAHV,EAGsC,yBAHtC,EAGiE,kBAHjE,EAIGC,WAJH,CAIe,MAAOC,OAAP,IAA4B;AAAA;;AACvC,UAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,EAAnB;AACA,UAAMC,OAAO,GAAG,KAAIC,sBAAJ,GAAhB;AACA,UAAMD,OAAO,CAACE,IAAR,CAAaL,UAAb,EAAyB;AAC7BM,MAAAA,cAAc,qBAAEP,OAAO,CAACQ,MAAV,oDAAE,gBAAgBD;AADH,KAAzB,CAAN;AAGA,QAAIE,QAAJ;;AACA,QAAIT,OAAO,CAACU,QAAR,KAAqB,SAAzB,EAAoC;AAClCD,MAAAA,QAAQ,GAAG,KAAIE,iCAAJ,GAAX;AACD,KAFD,MAEO,IAAIX,OAAO,CAACU,QAAR,KAAqB,KAAzB,EAAgC;AACrCD,MAAAA,QAAQ,GAAG,KAAIG,6BAAJ,GAAX;AACD,KAFM,MAEA;AACLH,MAAAA,QAAQ,GAAG,KAAII,wBAAJ,GAAX;AACD;;AACD,UAAM,oDAAgCT,OAAhC,EAAyCK,QAAzC,CAAN;AACD,GAnBH;AAmBK;AAA8B,MAnBnC;AAoBD","sourcesContent":["import { CommanderStatic } from 'commander';\n\nimport { Context, runCredentialsManagerStandalone } from '../credentials';\nimport {\n  SelectAndroidExperience,\n  SelectIosExperience,\n  SelectPlatform,\n} from '../credentials/views/Select';\n\ntype Options = {\n  platform?: 'android' | 'ios';\n  parent?: {\n    nonInteractive: boolean;\n  };\n};\n\nexport default function (program: CommanderStatic) {\n  program\n    .command('credentials:manager')\n    .description('Manage your credentials')\n    .option('-p --platform <platform>', 'Platform: [android|ios]', /^(android|ios)$/i)\n    .asyncAction(async (options: Options) => {\n      const projectDir = process.cwd();\n      const context = new Context();\n      await context.init(projectDir, {\n        nonInteractive: options.parent?.nonInteractive,\n      });\n      let mainpage;\n      if (options.platform === 'android') {\n        mainpage = new SelectAndroidExperience();\n      } else if (options.platform === 'ios') {\n        mainpage = new SelectIosExperience();\n      } else {\n        mainpage = new SelectPlatform();\n      }\n      await runCredentialsManagerStandalone(context, mainpage);\n    }, /* skip project validation */ true);\n}\n"],"file":"credentials.js"}