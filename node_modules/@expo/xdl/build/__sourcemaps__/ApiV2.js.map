{"version":3,"sources":["ApiV2.ts"],"names":["MAX_CONTENT_LENGTH","_rootBaseUrl","Config","api","scheme","host","_apiBaseUrl","rootBaseUrl","port","_convertFormDataToBuffer","formData","Promise","resolve","pipe","encoding","data","ApiV2Error","ExtendableError","constructor","message","code","ApiV2Client","clientForUser","user","sessionSecret","setClientName","name","exponentClient","options","getAsync","methodName","args","extraOptions","returnEntireResponse","_requestAsync","httpMethod","queryParameters","postAsync","body","putAsync","patchAsync","deleteAsync","uploadFormDataAsync","uploadOptions","headers","getHeaders","undefined","extraRequestOptions","url","reqOptions","method","params","paramsSerializer","QueryString","stringify","hasOwnProperty","ConnectionStatus","isOffline","timeout","maxContentLength","response","result","axios","request","e","maybeErrorData","_","errors","length","responseError","error","serverStack","stack","details"],"mappings":"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","sourcesContent":["import { JSONObject, JSONValue } from '@expo/json-file';\nimport axios, { AxiosRequestConfig } from 'axios';\nimport concat from 'concat-stream';\nimport ExtendableError from 'es6-error';\nimport FormData from 'form-data';\nimport idx from 'idx';\nimport merge from 'lodash/merge';\nimport QueryString from 'querystring';\n\nimport Config from './Config';\nimport * as ConnectionStatus from './ConnectionStatus';\n\nexport const MAX_CONTENT_LENGTH = 100 /* MB */ * 1024 * 1024;\n\n// These aren't constants because some commands switch between staging and prod\nfunction _rootBaseUrl() {\n  return `${Config.api.scheme}://${Config.api.host}`;\n}\n\nfunction _apiBaseUrl() {\n  let rootBaseUrl = _rootBaseUrl();\n  if (Config.api.port) {\n    rootBaseUrl += ':' + Config.api.port;\n  }\n  return rootBaseUrl + '/--/api/v2';\n}\n\nasync function _convertFormDataToBuffer(formData: FormData): Promise<{ data: Buffer }> {\n  return new Promise(resolve => {\n    formData.pipe(concat({ encoding: 'buffer' }, data => resolve({ data })));\n  });\n}\n\nexport class ApiV2Error extends ExtendableError {\n  code: string;\n  details?: JSONValue;\n  serverStack?: string;\n  readonly _isApiError = true;\n\n  constructor(message: string, code: string = 'UNKNOWN') {\n    super(message);\n    this.code = code;\n  }\n}\n\ntype RequestOptions = {\n  httpMethod: 'get' | 'post' | 'put' | 'patch' | 'delete';\n  queryParameters?: QueryParameters;\n  body?: JSONObject;\n  timeout?: number;\n};\n\ntype UploadOptions = {\n  headers: any;\n  data: any;\n};\n\ntype QueryParameters = { [key: string]: string | number | boolean | null | undefined };\n\ntype APIV2ClientOptions = {\n  sessionSecret?: string;\n};\n\nexport default class ApiV2Client {\n  static exponentClient: string = 'xdl';\n  sessionSecret: string | null = null;\n\n  static clientForUser(user?: APIV2ClientOptions | null): ApiV2Client {\n    if (user && user.sessionSecret) {\n      return new ApiV2Client({ sessionSecret: user.sessionSecret });\n    }\n\n    return new ApiV2Client();\n  }\n\n  static setClientName(name: string) {\n    ApiV2Client.exponentClient = name;\n  }\n\n  constructor(options: APIV2ClientOptions = {}) {\n    if (options.sessionSecret) {\n      this.sessionSecret = options.sessionSecret;\n    }\n  }\n\n  async getAsync(\n    methodName: string,\n    args: QueryParameters = {},\n    extraOptions?: Partial<RequestOptions>,\n    returnEntireResponse: boolean = false\n  ) {\n    return this._requestAsync(\n      methodName,\n      {\n        httpMethod: 'get',\n        queryParameters: args,\n      },\n      extraOptions,\n      returnEntireResponse\n    );\n  }\n\n  async postAsync(\n    methodName: string,\n    data?: JSONObject,\n    extraOptions?: Partial<RequestOptions>,\n    returnEntireResponse: boolean = false\n  ) {\n    return this._requestAsync(\n      methodName,\n      {\n        httpMethod: 'post',\n        body: data,\n      },\n      extraOptions,\n      returnEntireResponse\n    );\n  }\n\n  async putAsync(\n    methodName: string,\n    data: JSONObject,\n    extraOptions?: Partial<RequestOptions>,\n    returnEntireResponse: boolean = false\n  ) {\n    return this._requestAsync(\n      methodName,\n      {\n        httpMethod: 'put',\n        body: data,\n      },\n      extraOptions,\n      returnEntireResponse\n    );\n  }\n\n  async patchAsync(\n    methodName: string,\n    data: JSONObject,\n    extraOptions?: Partial<RequestOptions>,\n    returnEntireResponse: boolean = false\n  ) {\n    return this._requestAsync(\n      methodName,\n      {\n        httpMethod: 'patch',\n        body: data,\n      },\n      extraOptions,\n      returnEntireResponse\n    );\n  }\n\n  async deleteAsync(\n    methodName: string,\n    args: QueryParameters = {},\n    extraOptions?: Partial<RequestOptions>,\n    returnEntireResponse: boolean = false\n  ) {\n    return this._requestAsync(\n      methodName,\n      {\n        httpMethod: 'delete',\n        queryParameters: args,\n      },\n      extraOptions,\n      returnEntireResponse\n    );\n  }\n\n  async uploadFormDataAsync(methodName: string, formData: FormData) {\n    const options: RequestOptions = { httpMethod: 'put' };\n    const { data } = await _convertFormDataToBuffer(formData);\n    const uploadOptions: UploadOptions = {\n      headers: formData.getHeaders(),\n      data,\n    };\n    return await this._requestAsync(methodName, options, undefined, false, uploadOptions);\n  }\n\n  async _requestAsync(\n    methodName: string,\n    options: RequestOptions,\n    extraRequestOptions: Partial<RequestOptions> = {},\n    returnEntireResponse: boolean = false,\n    uploadOptions?: UploadOptions\n  ) {\n    const url = `${_apiBaseUrl()}/${methodName}`;\n    let reqOptions: AxiosRequestConfig = {\n      url,\n      method: options.httpMethod,\n      headers: {\n        'Exponent-Client': ApiV2Client.exponentClient,\n      },\n    };\n\n    if (this.sessionSecret) {\n      reqOptions.headers['Expo-Session'] = this.sessionSecret;\n    }\n\n    // Handle qs\n    if (options.queryParameters) {\n      reqOptions.params = options.queryParameters;\n      reqOptions.paramsSerializer = QueryString.stringify;\n    }\n\n    // Handle body\n    if (options.body) {\n      reqOptions.data = options.body;\n    }\n\n    if (!extraRequestOptions.hasOwnProperty('timeout') && ConnectionStatus.isOffline()) {\n      reqOptions.timeout = 1;\n    }\n\n    reqOptions = merge({}, reqOptions, extraRequestOptions, uploadOptions, {\n      maxContentLength: MAX_CONTENT_LENGTH,\n    });\n\n    let response;\n    let result;\n    try {\n      response = await axios.request(reqOptions);\n      result = response.data;\n    } catch (e) {\n      const maybeErrorData = idx(e, _ => _.response.data.errors.length);\n      if (maybeErrorData) {\n        result = e.response.data;\n      } else {\n        throw e;\n      }\n    }\n\n    if (result.errors && result.errors.length) {\n      const responseError = result.errors[0];\n      const error = new ApiV2Error(responseError.message, responseError.code);\n      error.serverStack = responseError.stack;\n      error.details = responseError.details;\n      throw error;\n    }\n\n    return returnEntireResponse ? response : result.data;\n  }\n}\n"],"file":"../ApiV2.js","sourceRoot":"/@expo/xdl@57.9.28/src"}