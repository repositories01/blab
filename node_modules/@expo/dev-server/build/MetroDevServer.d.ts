/// <reference types="expo__bunyan" />
/// <reference types="node" />
import http from 'http';
import { Platform } from '@expo/config';
import Log from '@expo/bunyan';
import * as ExpoMetroConfig from '@expo/metro-config';
import type Metro from 'metro';
export declare type MetroDevServerOptions = ExpoMetroConfig.LoadOptions & {
    logger: Log;
    quiet?: boolean;
};
export declare type BundleOptions = {
    entryPoint: string;
    platform: Platform;
    dev?: boolean;
    minify?: boolean;
    sourceMapUrl?: string;
};
export declare type BundleAssetWithFileHashes = Metro.AssetData & {
    fileHashes: string[];
};
export declare type BundleOutput = {
    code: string;
    map: string;
    assets: ReadonlyArray<BundleAssetWithFileHashes>;
};
export declare function runMetroDevServerAsync(projectRoot: string, options: MetroDevServerOptions): Promise<{
    server: http.Server;
    middleware: any;
}>;
export declare function bundleAsync(projectRoot: string, options: MetroDevServerOptions, bundles: BundleOptions[]): Promise<BundleOutput[]>;
